{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_guards/prevent-unsaved-changes.guard.ts","webpack:///./src/app/_resolvers/member-detail.resolver.ts","webpack:///./src/app/_resolvers/member-edit.resolver.ts","webpack:///./src/app/_resolvers/member-list.resolver.ts","webpack:///./src/app/_services/alertify.service.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/error.interceptor.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/lists/lists.component.css","webpack:///./src/app/lists/lists.component.html","webpack:///./src/app/lists/lists.component.ts","webpack:///./src/app/members/member-card/member-card.component.css","webpack:///./src/app/members/member-card/member-card.component.html","webpack:///./src/app/members/member-card/member-card.component.ts","webpack:///./src/app/members/member-detail/member-detail.component.css","webpack:///./src/app/members/member-detail/member-detail.component.html","webpack:///./src/app/members/member-detail/member-detail.component.ts","webpack:///./src/app/members/member-edit/member-edit.component.css","webpack:///./src/app/members/member-edit/member-edit.component.html","webpack:///./src/app/members/member-edit/member-edit.component.ts","webpack:///./src/app/members/member-list/member-list.component.css","webpack:///./src/app/members/member-list/member-list.component.html","webpack:///./src/app/members/member-list/member-list.component.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { AlertifyService } from './../_services/alertify.service';\nimport { AuthService } from './../_services/auth.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor (private authService: AuthService,\n      private router: Router,\n      private alertify: AlertifyService){}\n\n  canActivate(): boolean {\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n\n    this.alertify.error('You shall not pass!');\n    this.router.navigate(['/home']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\n\r\n@Injectable()\r\nexport class PreventUnsavedChanges implements CanDeactivate<MemberEditComponent> {\r\n    canDeactivate(component: MemberEditComponent) {\r\n        if (component.editForm.dirty) {\r\n            return confirm('are you sure you want to continue? any unsaved changes will be lost');\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","import { catchError } from 'rxjs/operators';\r\nimport { AlertifyService } from './../_services/alertify.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class MemberDetailResolver implements Resolve<User> {\r\n\r\n    constructor(private userService: UserService,\r\n        private router: Router,\r\n        private alertify: AlertifyService) {}\r\n\r\n    resolve (route: ActivatedRouteSnapshot): Observable<User> {\r\n            return this.userService.getUser(route.params['id']).pipe(\r\n                catchError(error => {\r\n                    this.alertify.error('Problem retrieving data');\r\n                    this.router.navigate(['/members']);\r\n                    return of(null);\r\n                })\r\n            );\r\n    }\r\n}\r\n","import { AuthService } from './../_services/auth.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User> {\r\n\r\n    constructor(private userService: UserService,\r\n        private router: Router,\r\n        private alertify: AlertifyService,\r\n        private authService: AuthService) {}\r\n\r\n    resolve (route: ActivatedRouteSnapshot): Observable<User> {\r\n            return this.userService\r\n                .getUser(this.authService.decodedToken.nameid)\r\n                .pipe(\r\n                catchError(error => {\r\n                    this.alertify.error('Problem retrieving your data');\r\n                    this.router.navigate(['/members']);\r\n                    return of(null);\r\n                })\r\n            );\r\n    }\r\n}\r\n","import { catchError } from 'rxjs/operators';\r\nimport { AlertifyService } from './../_services/alertify.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class MemberListResolver implements Resolve<User[]> {\r\n\r\n    constructor(private userService: UserService,\r\n        private router: Router,\r\n        private alertify: AlertifyService) {}\r\n\r\n    resolve (route: ActivatedRouteSnapshot): Observable<User[]> {\r\n            return this.userService.getUsers().pipe(\r\n                catchError(error => {\r\n                    this.alertify.error('Problem retrieving data');\r\n                    this.router.navigate(['/home']);\r\n                    return of(null);\r\n                })\r\n            );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\ndeclare let alertify: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n  constructor() {}\n\n  confirm(message: string, okCallback: () => any) {\n    alertify.confirm(message, function(e) {\n      if (e) {\n        okCallback();\n      } else {\n      }\n    });\n  }\n\n  success (message: string ) {\n    alertify.success(message);\n  }\n\n  error (message: string ) {\n    alertify.error(message);\n  }\n\n  warning (message: string ) {\n    alertify.warning(message);\n  }\n\n  message (message: string ) {\n    alertify.message(message);\n  }\n}\n","import { environment } from './../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  baseUrl = environment.apiUrl + 'auth/';\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n\n  constructor(private http: HttpClient) {}\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + 'login', model).pipe(\n      map((response: any) => {\n        const user = response;\n        if (user) {\n          localStorage.setItem('token', user.token);\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\n          console.log(this.decodedToken);\n        }\n      })\n    );\n  }\n\n  register(model: any) {\n    return this.http.post(this.baseUrl + 'register', model);\n  }\n\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(req).pipe(\r\n            catchError(error => {\r\n                if (error instanceof HttpErrorResponse) {\r\n                    if (error.status === 401 ) {\r\n                        return throwError(error.statusText);\r\n                    }\r\n                    const applicationError = error.headers.get('Application-Error');\r\n                    if (applicationError) {\r\n                        console.error(applicationError);\r\n                        return throwError(applicationError);\r\n                    }\r\n                    const serverError = error.error;\r\n                    let modalStateErrors = '';\r\n                    if (serverError && typeof serverError === 'object') {\r\n                        for (const key in serverError) {\r\n                            if (serverError[key]) {\r\n                                modalStateErrors += serverError[key] + '\\n';\r\n                            }\r\n                        }\r\n                    }\r\n                    return throwError (modalStateErrors || serverError || 'Some Server Error');\r\n                }\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport const ErrorInterceptorProvider = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ErrorInterceptor,\r\n    multi: true\r\n};\r\n","import { User } from './../_models/user';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getUsers(): Observable<User[]> {\n    return this.http.get<User[]>(this.baseUrl + 'users');\n  }\n\n  getUser(id): Observable<User> {\n    return this.http.get<User>(this.baseUrl + 'users/' + id);\n  }\n\n  updateUser(id: number, user: User) {\n    return this.http.put(this.baseUrl + 'users/' + id, user);\n  }\n}\n","module.exports = \"\"","module.exports = \"  <app-nav></app-nav>\\n<router-outlet></router-outlet>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './_services/auth.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  jwtHelper = new JwtHelperService();\n\n  constructor( private authService: AuthService) {}\n\n  ngOnInit() {\n    const token = localStorage.getItem('token');\n    if (token) {\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n  }\n}\n","import { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { UserService } from './_services/user.service';\nimport { appRoutes } from './routes';\nimport { AlertifyService } from './_services/alertify.service';\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\nimport { AuthService } from './_services/auth.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { BsDropdownModule, TabsModule } from 'ngx-bootstrap';\nimport { JwtModule } from '@auth0/angular-jwt';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { NgxGalleryModule } from 'ngx-gallery';\n\n\nexport function tokenGetter() {\n    return localStorage.getItem('token');\n}\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      NavComponent,\n      HomeComponent,\n      RegisterComponent,\n      MemberListComponent,\n      ListsComponent,\n      MessagesComponent,\n      MemberCardComponent,\n      MemberDetailComponent,\n      MemberEditComponent\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      BsDropdownModule.forRoot(),\n      RouterModule.forRoot(appRoutes),\n      NgxGalleryModule,\n      JwtModule.forRoot({\n          config: {\n              tokenGetter: tokenGetter,\n              whitelistedDomains: ['localhost:5000'],\n              blacklistedRoutes: ['localhost:5000/api/auth']\n          }\n      }),\n      TabsModule.forRoot()\n   ],\n   providers: [\n      AuthService,\n      ErrorInterceptorProvider,\n      AlertifyService,\n      AuthGuard,\n      UserService,\n      MemberDetailResolver,\n      MemberListResolver,\n      MemberEditResolver,\n      PreventUnsavedChanges\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div *ngIf=\\\"!registerMode\\\" style=\\\"text-align: center\\\">\\n    <h1>Find your match</h1>\\n    <p class=\\\"lead\\\">Come on in to view your matches.. Just sign up!</p>\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-primary btn-lg mr-2\\\" (click)=\\\"registerToggle()\\\">Register</button>\\n      <button class=\\\"btn btn-info btn-lg\\\">Learn more</button>\\n    </div>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"registerMode\\\" class=\\\"container\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-4\\\">\\n      <app-register (cancelRegister)=\\\"cancelRegisterMode($event)\\\"></app-register>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  registerMode = false;\n  values: any;\n\n  constructor( private http: HttpClient) { }\n\n  ngOnInit() {\n  }\n\n  registerToggle() {\n    this.registerMode = true;\n  }\n\n  cancelRegisterMode(registerMode: boolean) {\n    this.registerMode = registerMode;\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  lists works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".card:hover img {\\r\\n    -webkit-transform: scale(1.2, 1.2);\\r\\n            transform: scale(1.2, 1.2);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function: ease-out;\\r\\n    opacity: 0.7;\\r\\n}\\r\\n\\r\\n.card img {\\r\\n    -webkit-transform: scale(1.0, 1.0);\\r\\n            transform: scale(1.0, 1.0);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function: ease-out\\r\\n}\\r\\n\\r\\n.card-image-wrapper{\\r\\n    overflow: hidden;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.member-icons {\\r\\n    position: absolute;\\r\\n    bottom: -30%;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    margin-right: auto;\\r\\n    margin-left: auto;\\r\\n    opacity: 0;\\r\\n}\\r\\n\\r\\n.card-image-wrapper:hover .member-icons {\\r\\n    bottom: 0;\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.animate {\\r\\n    transition: all 0.3s ease-in-out;\\r\\n}\"","module.exports = \"<div class=\\\"card mb-4\\\">\\n  <div class=\\\"card-image-wrapper\\\">\\n    <img class=\\\"card-img-top\\\" src=\\\"{{user.photoUrl}}\\\" alt=\\\"{{user.knownAs}}\\\">\\n    <ul class=\\\"list-inline member-icons animate text-center\\\">\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" \\n        [routerLink]=\\\"['/members/', user.id]\\\"><i class=\\\"fa fa-user\\\"></i></button></li>\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-heart\\\"></i></button></li>\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-envelope\\\"></i></button></li>\\n    </ul>\\n  </div>\\n  <div class=\\\"card-body p-1\\\">\\n    <h6 class=\\\"card-title text-center mb-1\\\"><i class=\\\"fa fa-user\\\"></i>{{user.knownAs}} {{user.age}}</h6>\\n    <p class=\\\"card-text text-muted text-center\\\">{{user.city}}</p>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from '../../_models/user';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n\n  @Input()\n  user: User;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".img-thumbnail {\\r\\n    margin:25px;\\r\\n    width: 85%;\\r\\n    height: 85%;\\r\\n    \\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n    padding: 10px 15px;\\r\\n    background-color: #fff;\\r\\n    border-top: none; \\r\\n}\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <h1>{{user.knownAs}}'s Profile</h1>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{user.photoUrl}}\\\" alt=\\\"{{user.knownAs}}\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Location:</strong>\\n            <p>{{user.city}}, {{user.country}}</p>\\n          </div>\\n          <div>\\n            <strong>Age:</strong>\\n            <p>{{user.age}}</p>\\n          </div>\\n\\n          <div>\\n            <strong>Last active:</strong>\\n            <p>{{user.lastActive}}</p>\\n          </div>\\n\\n          <div>\\n            <strong>Member since:</strong>\\n            <p>{{user.created}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"btn-group d-flex\\\">\\n            <button class=\\\"btn btn-primary w-100\\\">Like</button>\\n            <button class=\\\"btn btn-success w-100\\\">Message</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"member-tabset\\\">\\n          <tab heading=\\\"About {{user.knownAs}}\\\">\\n            <h4>Description</h4>\\n            <p>{{user.introduction}}</p>\\n            <h4>Lookin for</h4>\\n            <p>{{user.lookingFor}}</p>\\n          </tab>\\n          <tab heading=\\\"Interests\\\">\\n            <h4>Interests</h4>\\n            <p>{{user.interests}}</p>\\n          </tab>\\n          <tab heading=\\\"Photos\\\">\\n              <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\"></ngx-gallery>\\n          </tab>\\n          <tab heading=\\\"Messages\\\">\\n            <p>Messages</p>\\n          </tab>\\n        </tabset>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\"","import { AlertifyService } from './../../_services/alertify.service';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from '../../_models/user';\nimport { UserService } from '../../_services/user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery';\n\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit {\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n\n  constructor( private userService: UserService,\n    private route: ActivatedRoute,\n    private alertify: AlertifyService ) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\n    });\n\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false\n      }\n    ];\n    this.galleryImages = this.getImages();\n  }\n\n  getImages() {\n    const imageUrls = [];\n    for (let i = 0 ; i < this.user.photos.length; i++) {\n      imageUrls.push({\n        small: this.user.photos[i].url,\n        medium: this.user.photos[i].url,\n        big: this.user.photos[i].url,\n        description: this.user.photos[i].description\n      });\n    }\n    return imageUrls;\n  }\n\n\n}\n","module.exports = \".img-thumbnail {\\r\\n    margin:25px;\\r\\n    width: 85%;\\r\\n    height: 85%;\\r\\n    \\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n    padding: 10px 15px;\\r\\n    background-color: #fff;\\r\\n    border-top: none; \\r\\n}\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\">\\n          <h1>Your Profile</h1>  \\n      </div>\\n      <div class=\\\"col-sm-8\\\" *ngIf=\\\"editForm.dirty\\\">\\n        <div class=\\\"alert alert-info\\\">\\n          <strong>Information: </strong>You have made changes, any unsaved changes will be lost!\\n        </div>\\n      </div>\\n      \\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"card\\\">\\n          <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{user.photoUrl}}\\\" alt=\\\"{{user.knownAs}}\\\">\\n          <div class=\\\"card-body\\\">\\n            <div>\\n              <strong>Location:</strong>\\n              <p>{{user.city}}, {{user.country}}</p>\\n            </div>\\n            <div>\\n              <strong>Age:</strong>\\n              <p>{{user.age}}</p>\\n            </div>\\n  \\n            <div>\\n              <strong>Last active:</strong>\\n              <p>{{user.lastActive}}</p>\\n            </div>\\n  \\n            <div>\\n              <strong>Member since:</strong>\\n              <p>{{user.created}}</p>\\n            </div>\\n          </div>\\n          <div class=\\\"card-footer\\\">\\n            \\n              <button [disabled]=\\\"!editForm.dirty\\\" \\n                form=\\\"editedFormId\\\" \\n                class=\\\"btn btn-success btn-block\\\">Save changes</button>\\n            \\n          </div>\\n        </div>\\n      </div>\\n  \\n      <div class=\\\"col-sm-8\\\">\\n        <div class=\\\"tab-panel\\\">\\n          <tabset class=\\\"member-tabset\\\">\\n            <tab heading=\\\"Edit profile\\\">\\n\\n              <form #editForm=\\\"ngForm\\\" id=\\\"editedFormId\\\" (ngSubmit)=\\\"updateUser()\\\">\\n                  <h4>Description</h4>\\n                  <textarea name=\\\"introduction\\\" rows=\\\"6\\\" class=\\\"form-control\\\" \\n                    [(ngModel)]=\\\"user.introduction\\\"></textarea>\\n                  <h4>Lookin for</h4>\\n                  <textarea name=\\\"lookingFor\\\" rows=\\\"6\\\" class=\\\"form-control\\\" \\n                    [(ngModel)]=\\\"user.lookingFor\\\"></textarea>\\n                  <h4>Interests</h4>\\n                  <textarea name=\\\"interests\\\" rows=\\\"6\\\" class=\\\"form-control\\\" \\n                    [(ngModel)]=\\\"user.interests\\\"></textarea>\\n                    \\n                  <h4>Location Details:</h4>\\n                  <div class=\\\"form-inline\\\">\\n                    <label for=\\\"city\\\">City</label>\\n                    <input type=\\\"text\\\" name=\\\"city\\\" class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"user.city\\\">\\n                    \\n                      <label for=\\\"country\\\">Country</label>\\n                      <input type=\\\"text\\\" name=\\\"country\\\" class=\\\"form-control\\\"\\n                        [(ngModel)]=\\\"user.country\\\">\\n                  </div>\\n              </form>\\n              \\n            </tab>\\n            <tab heading=\\\"Edit photos\\\">\\n              \\n              <p>photo edit</p>\\n            </tab>\\n           \\n          </tabset>\\n        </div>\\n  \\n      </div>\\n    </div>\\n  </div>\"","import { AuthService } from './../../_services/auth.service';\nimport { AlertifyService } from './../../_services/alertify.service';\nimport { User } from './../../_models/user';\nimport { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from '../../_services/user.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n\n  @ViewChild('editForm')\n  editForm: NgForm;\n\n  user: User;\n\n  // prevent close window and lose edited data\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n\n  constructor(private route: ActivatedRoute,\n    private alertify: AlertifyService,\n    private userService: UserService,\n    private authService: AuthService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\n    });\n  }\n\n  updateUser() {\n    this.userService\n      .updateUser(this.authService.decodedToken.nameid, this.user)\n      .subscribe(next => {\n        this.alertify.success('Profile updated successfully');\n        this.editForm.reset(this.user);\n      }, errror => {\n        this.alertify.error(errror);\n      });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-2 col-md-3 col-sm-6\\\" *ngFor=\\\"let user of users\\\">\\n      <app-member-card [user]=\\\"user\\\"></app-member-card>\\n    </div>\\n  </div>\\n</div>\"","import { AlertifyService } from './../../_services/alertify.service';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from '../../_models/user';\nimport { UserService } from '../../_services/user.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  users: User[];\n\n  constructor(private userService: UserService,\n    private alertify: AlertifyService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'];\n    });\n  }\n\n  // loadUsers() {\n  //   this.userService.getUsers().subscribe((users: User[]) => {\n  //     this.users = users;\n  //   }, error => {\n  //     this.alertify.error(error);\n  //   });\n  // }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  messages works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".dropdown-toggle, .dropdown-item {\\r\\n    cursor: pointer;\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">Dating App</a>\\n\\n\\n    <ul *ngIf=\\\"loggedIn()\\\" class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/members']\\\">Matches</a>\\n      </li>\\n\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/lists']\\\">Lists</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/messages']\\\">Messages</a>\\n      </li>\\n      <!-- <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n      </li> -->\\n\\n    </ul>\\n\\n    <div *ngIf=\\\"loggedIn()\\\" class=\\\"dropdown\\\" dropdown>\\n      <a class=\\\"dropdown-toggle text-light\\\" dropdownToggle>\\n        Welcome {{authService.decodedToken?.unique_name | titlecase}}\\n      </a>\\n\\n      <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\n        <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/member/edit']\\\"><i class=\\\"fa fa-user\\\"></i>Edit Profile</a>\\n        <div class=\\\"dropdpwn-divider\\\"></div>\\n        <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\"><i class=\\\"fa fa-sign-out\\\"></i>Log Out</a>\\n      </div>\\n    </div>\\n\\n    <form *ngIf=\\\"!loggedIn()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" required [(ngModel)]=\\\"model.username\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" required [(ngModel)]=\\\"model.password\\\">\\n      <button class=\\\"btn btn-success my-2 my-sm-0\\\" [disabled]=\\\"!loginForm.valid\\\" type=\\\"submit\\\">Login</button>\\n    </form>\\n\\n\\n  </div>\\n\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  model: any = {};\n\n  constructor(public authService: AuthService,\n    private alertify: AlertifyService,\n    private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  login() {\n    this.authService.login(this.model).subscribe(next => {\n      // console.log('Logged in succesfully');\n      this.alertify.success('Logged in succesfully');\n    }, error => {\n      // console.log(error);\n      this.alertify.error(error);\n    }, () => {\n      this.router.navigate(['/members']);\n    });\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    // console.log('logged out');\n    this.alertify.message('logged out');\n    this.router.navigate(['/home']);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"register()\\\">\\n  <h2 class=\\\"text-center text-primary\\\">Sign Up</h2>\\n  <hr>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" required\\n      name=\\\"username\\\" \\n      [(ngModel)]=\\\"model.username\\\"\\n      placeholder=\\\"Username\\\">\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" required\\n      name=\\\"password\\\" \\n      [(ngModel)]=\\\"model.password\\\"\\n      placeholder=\\\"Password\\\">\\n  </div>\\n\\n  <div class=\\\"form-group text-center\\\">\\n    <button class=\\\"btn btn-success\\\" type=\\\"submit\\\">Register</button>\\n    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n  </div>\\n  \\n\\n</form>\"","import { AlertifyService } from './../_services/alertify.service';\nimport { AuthService } from './../_services/auth.service';\nimport { Component, OnInit, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  @Output()\n  cancelRegister = new EventEmitter();\n\n  model: any = {};\n\n  constructor(private authService: AuthService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  register() {\n    console.log(this.model);\n    this.authService.register(this.model).subscribe(\n      () => {\n        // console.log('registration successfull');\n        this.alertify.success('Registration successfull');\n      }\n    , error => {\n      // console.log(error);\n      this.alertify.error(error);\n    });\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n    console.log('cancelled');\n  }\n\n}\n","import { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\r\n\r\nexport const appRoutes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  {\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: 'members', component: MemberListComponent,\r\n          resolve: {users: MemberListResolver} },\r\n      { path: 'members/:id', component: MemberDetailComponent,\r\n          resolve: {user: MemberDetailResolver} },\r\n      { path: 'member/edit', component: MemberEditComponent,\r\n          resolve: {user: MemberEditResolver},\r\n          canDeactivate: [PreventUnsavedChanges]\r\n      },\r\n      { path: 'messages', component: MessagesComponent },\r\n      { path: 'lists', component: ListsComponent }\r\n    ]\r\n  },\r\n  { path: '**', redirectTo: '', pathMatch: 'full' }\r\n];\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}